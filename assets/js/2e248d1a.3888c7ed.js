"use strict";(self.webpackChunkproduct_knowledge_tractusx_github_io=self.webpackChunkproduct_knowledge_tractusx_github_io||[]).push([[1076],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),g=r,m=d["".concat(p,".").concat(g)]||d[g]||s[g]||l;return t?a.createElement(m,o(o({ref:n},u),{},{components:t})):a.createElement(m,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=g;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},15436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const l={sidebar_position:2,title:"Agent-Enabled EDC"},o=void 0,i={unversionedId:"operation-view/agent_edc",id:"operation-view/agent_edc",title:"Agent-Enabled EDC",description:"This document describes deployment for an Agent-Enabled EDC.",source:"@site/docs/operation-view/agent_edc.md",sourceDirName:"operation-view",slug:"/operation-view/agent_edc",permalink:"/product-knowledge/docs/operation-view/agent_edc",draft:!1,editUrl:"https://github.com/catenax-ng/product-knowledge/tree/feature/ART3-382-documentation/docs/operation-view/agent_edc.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Agent-Enabled EDC"},sidebar:"docs",previous:{title:"Deployment",permalink:"/product-knowledge/docs/operation-view/deployment"},next:{title:"Provisioning",permalink:"/product-knowledge/docs/operation-view/provider"}},p={},c=[{value:"Option 1: Include Knowledge Agents into your own EDC Build",id:"option-1-include-knowledge-agents-into-your-own-edc-build",level:2},{value:"Option 2: Drop an additional extension jar into your EDC images",id:"option-2-drop-an-additional-extension-jar-into-your-edc-images",level:2},{value:"Option 3: Use the ready-made Agent-enbled EDC images",id:"option-3-use-the-ready-made-agent-enbled-edc-images",level:2},{value:"Deployment using a Helm umbrella chart",id:"deployment-using-a-helm-umbrella-chart",level:3}],u={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document describes deployment for an Agent-Enabled EDC."),(0,r.kt)("p",null,"For more information see"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Our ",(0,r.kt)("a",{parentName:"li",href:"../adoption-view/intro"},"Adoption")," guideline"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"../development-view/architecture"},"Architecture")," documentation"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"deployment"},"Deployment")," overview"),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("a",{parentName:"li",href:"policy"},"Data Sovereignity & Graph Policy")," discussion")),(0,r.kt)("p",null,"For enabling your Dataspace Connector (or rather: its control plane and its data plane(s)) to speak Agent protocols, you can opt for one of three choices."),(0,r.kt)("h2",{id:"option-1-include-knowledge-agents-into-your-own-edc-build"},"Option 1: Include Knowledge Agents into your own EDC Build"),(0,r.kt)("p",null,"see ]Compiling Against the Agent KIT](../development-view/compile)"),(0,r.kt)("h2",{id:"option-2-drop-an-additional-extension-jar-into-your-edc-images"},"Option 2: Drop an additional extension jar into your EDC images"),(0,r.kt)("p",null,"Version 0.6.4-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.1.2\nVersion 0.7.2-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.1.4 (unpublished)\nVersion 0.7.4-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.2.0\nVersion 0.8.>=5-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release >=0.3.0"),(0,r.kt)("p",null,"Download the jar from the following location and add it to the lib/ext folder of your EDC control plane installation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/catenax-ng/product-knowledge/packages/1776419"},"Control Plane Agent Transfer Package"))),(0,r.kt)("p",null,"Download the jar from the following location and add it to the lib/ext folder of your EDC data plane installation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/catenax-ng/product-knowledge/packages/1781577"},"Data Plane Agent Protocol Package"))),(0,r.kt)("p",null,"If using a docker environment, these files could be simply mounted under /app/lib/ext"),(0,r.kt)("h2",{id:"option-3-use-the-ready-made-agent-enbled-edc-images"},"Option 3: Use the ready-made Agent-enbled EDC images"),(0,r.kt)("p",null,"Version 0.6.4-SNAPSHOT of Knowledge Agents is built against Catena-X EDC Release 0.1.2"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/controlplane-memory:0.6.4-SNAPSHOT"},"Agent-Enabled In-Memory Control Plane using Azure Vault")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/agentplane-azurevault:0.6.4-SNAPSHOT"},"Agent-Enabled Data Plane (Http-Only) using Azure Vault"))),(0,r.kt)("p",null,"Version 0.7.2-SNAPSHOT of Knowledge Agents is built against Catena-X EDC Release 0.1.4 (unpublished)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/controlplane-memory:0.7.2-SNAPSHOT"},"Agent-Enabled In-Memory Control Plane using Azure Vault")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/agentplane-azurevault:0.7.2-SNAPSHOT"},"Agent-Enabled Data Plane (Http-Only) using Azure Vault"))),(0,r.kt)("p",null,"Version 0.7.4-SNAPSHOT of Knowledge Agents is built against Catena-X EDC Release 0.2.0"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/controlplane-memory:0.7.4-SNAPSHOT"},"Agent-Enabled In-Memory Control Plane using Azure Vault")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/agentplane-azurevault:0.7.4-SNAPSHOT"},"Agent-Enabled Data Plane (Http-Only) using Azure Vault"))),(0,r.kt)("p",null,"Version 0.8.5-SNAPSHOT of Knowledge Agents will be built against Catena-X EDC Release 0.3.0"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/controlplane-memory:0.8.5-SNAPSHOT"},"Agent-Enabled In-Memory Control Plane using Azure Vault")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"ghcr.io/catenax-ng/product-knowledge/agentplane-azurevault:0.8.5-SNAPSHOT"},"Agent-Enabled Data Plane (Http-Only) using Azure Vault"))),(0,r.kt)("h3",{id:"deployment-using-a-helm-umbrella-chart"},"Deployment using a Helm umbrella chart"),(0,r.kt)("p",null,"In each case, we have adopted two helm charts which can be used as sub-charts in a more complex umbrella."),(0,r.kt)("p",null,"Add the KA helm repo for that purpose:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"helm repo add catenax-knowledge https://catenax-ng.github.io/product-knowledge/infrastructure\n")),(0,r.kt)("p",null,"Add aliased dependencies to your umbrella chart:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  - name: agent-control-plane\n    repository: https://catenax-ng.github.io/product-knowledge/infrastructure\n    version: 0.7.4-SNAPSHOT\n    alias: supplier-control-plane\n  - name: agent-data-plane\n    repository: https://catenax-ng.github.io/product-knowledge/infrastructure\n    version: 0.7.4-SNAPSHOT\n    alias: supplier-data-plane\n")),(0,r.kt)("p",null,"and update the dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"helm dependencies update\n")),(0,r.kt)("p",null,"You may now configure the deployment instances in your values.yaml in more detail (see the documentation of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/tree/feature/KA-188-extract-sub-charts/infrastructure/charts/agent-control-plane"},"agent control plane chart")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/tree/feature/KA-188-extract-sub-charts/infrastructure/charts/agent-data-plane"},"agent data plane chart"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# Common Api-Key Settings\nauth: &auth\n key: X-Api-Key\n value: <apikey>\n\n# Access to the Vault\nvault: &vault\n name: "<name>"\n tenantid: "<tenantid>"\n clientid: "<clientid>"\n clientsecret: "<clientsecret>"\n\n# Common Oauth Settings to Connect the Dataspace\ndaps: &daps\n  clientid: <dapsclientid>\n  providerAudience: idsc:IDS_CONNECTORS_ALL\n  providerJwksUrl: https://daps.public/.well-known/jwks.json\n  tokenUrl: https://daps.public/token\n\n# The Supplier Providing Control plane\nsupplier-control-plane: \n  nameOverride: supplier-control-plane\n  fullnameOverride: supplier-control-plane\n  vault: *vault\n  oauth: \n    <<: *daps\n    privateKeyAlias: supplier-daps-key\n    publicKeyAlias: supplier-daps-crt\n    endpointAudience: http://supplier-control-plane:8282/api/v1/ids/data\n  transfer:\n    proxy:\n      token:\n        signerPrivateKeyAlias: supplier-daps-key\n        verifierPublicKeyAlias: supplier-daps-crt\n  configuration:\n    properties: |-\n      edc.hostname=edc-control.public\n      edc.ids.id=urn:connector:edc:supplier\n      edc.ids.title=Supplier Dataspace Connector\n      edc.ids.description=Providing Eclipse Dataspace Connector for Knowledge Agents Supplier\n      edc.ids.endpoint=https://edc-control.public/api/v1/ids\n      edc.ids.validation.referringconnector=false\n      edc.ids.maintainer=http://your.company\n      edc.ids.curator=http://your.company\n      edc.ids.catalog.id=urn:catalog:catenax\n      edc.ids.security.profile=base\n      ids.webhook.address=http://edc-control.public\n      edc.data.encryption.algorithm=NONE\n      edc.receiver.http.endpoint=https://apiwrapper.local/callback/endpoint-data-reference\n  dataplanes: \n    agentplane:\n      url: http://edc-data.intern/\n      publicurl: https://edc-data.public/api/public\n      callback: \n        url: http://edc-data.intern/callback/endpoint-data-reference\n        auth: *auth      \n\n# The Supplier Data plane\nsupplier-data-plane: &supplierdataplane\n  nameOverride: supplier-data-plane\n  fullnameOverride: supplier-data-plane\n  vault: *vault\n  oauth: \n    <<: *daps\n    privateKeyAlias: supplier-daps-key\n    publicKeyAlias: supplier-daps-crt\n    endpointAudience: http://supplier-control-plane:8282/api/v1/ids/data\n  token:\n    validationEndpoint: http://dlr-agent-control:8182/validation/token\n  configuration:\n    properties: |-\n      edc.hostname=edc-data.public\n  assets:\n    dataspace.ttl: resources/dataspace.ttl\n  agent:\n    # -- Data API Url of the associated Control Plane\n    controlPlaneDataUrl: http://supplier-control-plane:8181/data\n    # -- Initial Definition of the default graph, path to a mounted resource containing a turtle file\n    defaultGraph: \n      content: dataspace.ttl\n      name: api\n    # Configures the Federated Data Catalogue\n    federation: \n      # -- Enable synchronization by specifying the number of milliseconds\n      synchronization: 60000\n      # -- A List of Base Urls Hinting to the IDS Apis of business partners\n      connectors: \n        - https://business-partner-edc.public\n\n')),(0,r.kt)("p",null,"And be sure to replace the charts/agent-data-plane/resources/dataspace.ttl with the\ninitial graph data for your dataspace, such as in the ",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/catenax-ng/product-knowledge/feature/KA-188-extract-sub-charts/infrastructure/resources/dataspace.ttl"},"Catena-X Integration Default Graph")))}d.isMDXComponent=!0}}]);