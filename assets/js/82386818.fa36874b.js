"use strict";(self.webpackChunkproduct_knowledge_tractusx_github_io=self.webpackChunkproduct_knowledge_tractusx_github_io||[]).push([[8102],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,m=u["".concat(s,".").concat(h)]||u[h]||c[h]||l;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},81637:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={},i="CX - 0084 Federated Queries in Data Spaces (Knowledge Agents) v.1.0.0",o={unversionedId:"adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0",id:"adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0",title:"CX - 0084 Federated Queries in Data Spaces (Knowledge Agents) v.1.0.0",description:"Contributer:",source:"@site/docs/adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0.md",sourceDirName:"adoption-view",slug:"/adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0",permalink:"/product-knowledge/docs/adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0",draft:!1,editUrl:"https://github.com/catenax-ng/product-knowledge/tree/feature/ART3-382-documentation/docs/adoption-view/CX-0084-Federated_Queries_In_Data_Spaces_v1.0.0.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Frequently Asked Questions",permalink:"/product-knowledge/docs/adoption-view/faq"},next:{title:"Testbed",permalink:"/product-knowledge/docs/adoption-view/testbed"}},s={},p=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"ABOUT THIS DOCUMENT &amp; MOTIVATION",id:"about-this-document--motivation",level:2},{value:"DISCLAIMER &amp; LIABILITY",id:"disclaimer--liability",level:2},{value:"REVISIONS &amp; UPDATE",id:"revisions--update",level:2},{value:"COPYRIGHT &amp; TRADEMARKS",id:"copyright--trademarks",level:2},{value:"ABSTRACT",id:"abstract",level:2},{value:"1. INTRODUCTION",id:"1-introduction",level:2},{value:"1.1 AUDIENCE &amp; SCOPE",id:"11-audience--scope",level:3},{value:"1.2 CONTEXT",id:"12-context",level:3},{value:"1.3 ARCHITECTURE OVERVIEW",id:"13-architecture-overview",level:3},{value:"Semantic (Ontology) Models",id:"semantic-ontology-models",level:4},{value:"Data Consumption Layer/Query Definition",id:"data-consumption-layerquery-definition",level:4},{value:"Dataspace Layer",id:"dataspace-layer",level:4},{value:"Backend Systems",id:"backend-systems",level:4},{value:"Virtualization Layer",id:"virtualization-layer",level:4},{value:"Binding Layer",id:"binding-layer",level:4},{value:"1.4 CONFORMANCE",id:"14-conformance",level:3},{value:"1.5 PROOF OF CONFORMITY",id:"15-proof-of-conformity",level:3},{value:"2. Conformity Assessment Criteria",id:"2-conformity-assessment-criteria",level:2},{value:"2.1 CAC for EDC",id:"21-cac-for-edc",level:3},{value:"2.2 CAC for Matchmaking Agent",id:"22-cac-for-matchmaking-agent",level:3},{value:"2.3 CAC for Federated Catalogue",id:"23-cac-for-federated-catalogue",level:3},{value:"2.4 CAC for Binding Agents",id:"24-cac-for-binding-agents",level:3},{value:"2.5 CAC for Ontology Hub",id:"25-cac-for-ontology-hub",level:3},{value:"3 REFERENCES",id:"3-references",level:2},{value:"3.1 NORMATIVE REFERENCES",id:"31-normative-references",level:3},{value:"ANNEXES",id:"annexes",level:2},{value:"SPARQL Profiles",id:"sparql-profiles",level:3},{value:"KA-BIND",id:"ka-bind",level:4},{value:"FUNCTION RESTRICTED KA-BIND",id:"function-restricted-ka-bind",level:5},{value:"KA-MATCH",id:"ka-match",level:4},{value:"KA-TRANSFER",id:"ka-transfer",level:4},{value:"Agent-Related EDC Assets",id:"agent-related-edc-assets",level:3},{value:"Graph Assets",id:"graph-assets",level:4},{value:"Skill Assets",id:"skill-assets",level:4}],d={toc:p};function u(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cx---0084-federated-queries-in-data-spaces-knowledge-agents-v100"},"CX - 0084 Federated Queries in Data Spaces (Knowledge Agents) v.1.0.0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Contributer:"),"\nDr. Tom Buchert (T-Systems)\nDr. Christoph G. Jung (T-Systems)\nRolf Bosse (Mercedes-Benz GmbH)"),(0,r.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cx---0084-federated-queries-in-data-spaces-knowledge-agents-v100"},"CX - 0084 Federated Queries in Data Spaces (Knowledge Agents) v.1.0.0"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#table-of-contents"},"TABLE OF CONTENTS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#about-this-document--motivation"},"ABOUT THIS DOCUMENT & MOTIVATION")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disclaimer--liability"},"DISCLAIMER & LIABILITY")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#revisions--update"},"REVISIONS & UPDATE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#copyright--trademarks"},"COPYRIGHT & TRADEMARKS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#abstract"},"ABSTRACT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1-introduction"},"1. INTRODUCTION"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#11-audience--scope"},"1.1 AUDIENCE & SCOPE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#12-context"},"1.2 CONTEXT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#13-architecture-overview"},"1.3 ARCHITECTURE OVERVIEW")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#14-conformance"},"1.4 CONFORMANCE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#15-proof-of-conformity"},"1.5 PROOF OF CONFORMITY")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2-conformity-assessment-criteria"},"2. CONFORMITY ASSESSMENT CRITERIA"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#21-cac-for-edc"},"2.1 CAC FOR EDC")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#22-cac-for-matchmaking-agent"},"2.2 CAC FOR Matchmaking Agent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#23-cac-for-federated-catalogue"},"2.3 CAC FOR Federated Catalogue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#24-cac-for-binding-agents"},"2.4 CAC FOR Binding Agent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#25-cac-for-ontology-hub"},"2.5 CAC FOR Ontology Hub")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#3-references"},"3 REFERENCES"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#31-normative-references"},"3.1 NORMATIVE REFERENCES")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#annexes"},"ANNEXES"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#agent-related-edc-assets"},"Agent-Related EDC Assets"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#graph-assets"},"Graph Assets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#skill-assets"},"Skill Assets")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sparql-profiles"},"SPARQL Profiles"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ka-match"},"KA-MATCH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ka-transfer"},"KA-TRANSFER")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ka-bind"},"KA-BIND"))))))))),(0,r.kt)("h2",{id:"about-this-document--motivation"},"ABOUT THIS DOCUMENT & MOTIVATION"),(0,r.kt)("h2",{id:"disclaimer--liability"},"DISCLAIMER & LIABILITY"),(0,r.kt)("h2",{id:"revisions--update"},"REVISIONS & UPDATE"),(0,r.kt)("h2",{id:"copyright--trademarks"},"COPYRIGHT & TRADEMARKS"),(0,r.kt)("h2",{id:"abstract"},"ABSTRACT"),(0,r.kt)("p",null,"This document provides a standard for a semantically-driven and state-of-the-art compute-to-data architecture for Catena-X, the so called Knowledge Agents approach. It builds on well-established W3C-standards of the semantic web, such as OWL, SPARQL, SHACL, RDF etc. and makes these protocols usable to formulate powerful queries to the data space. Those queries can be used to answer business questions directly (comparable to a search engine) or they can be embedded in apps to include query results into workflows with more advanced visualization etc. The document addresses all stakeholders in Catena-X context that want to exchange data via the knowledge agents approach (data providers and consumers as well as app- and enablement service providers)."),(0,r.kt)("h2",{id:"1-introduction"},"1. INTRODUCTION"),(0,r.kt)("h3",{id:"11-audience--scope"},"1.1 AUDIENCE & SCOPE"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"This section is non-normative"))),(0,r.kt)("p",null,"The standard is relevant for the following roles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Business Application Provider"),(0,r.kt)("li",{parentName:"ul"},"Enablement Service Provider"),(0,r.kt)("li",{parentName:"ul"},"Data Consumer"),(0,r.kt)("li",{parentName:"ul"},"Data Provider")),(0,r.kt)("p",null,"In the following, we call one of the following affected stakeholders/solutions KA-enabled if it passes the Conformity Assessment Criteria (CAC, see Section 1.2 and Chapter 2):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Business Application Provider:")," Applications that use KA technology on behalf of a Dataspace Participant (e.g. a Fleet Monitor, an Incident Reporting Solution).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Enablement Service Provider:")," Services to assist Dataspace Participants/Applications in processing data based on KA technology (e.g. a Graph Database, a Virtual Graph Binding Engine, an EDC Package).\nAs a second path, Companies are addressed that want to provide compute resources (for example by a server or other KA-enabled Applications or Services) based on instances/configurations of KA-enabled EDC Packages, for example a Recycling Software Specialist")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Data Consumer:")," Companies that want to use data and logic (for example by KA-enabled Applications or Services) based on instances/configurations of KA-enabled EDC Packages, such as a Recycling Company or a Tier-2 Automotive Supplier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Data Provider:")," Companies that want to provide data (for example by a backend database or other KA-enabled Applications or Services) based on instances/configurations of KA-enabled EDC Packages, for example an Automotive OEM. Companies that want to provide functions (for example by a REST endpoint or other KA-enabled Applications or Services) based on instances/configurations of KA-enabled EDC Packages, for example a Tier1 Sensor Device Supplier"))),(0,r.kt)("p",null,"The CAC formulated in this standard comprise the following scope:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Query and Search (Basic Mechanism, Integration in User Experiences)"),(0,r.kt)("li",{parentName:"ul"},"Services for making use of various federated data sources being part of a data space (Data & Function Provisioning, Logic Development & Provisioning)"),(0,r.kt)("li",{parentName:"ul"},"Semantic Modelling"),(0,r.kt)("li",{parentName:"ul"},"Publishing, Negotiation, Transfer Protocols and Policy Enforcement via IDS (EDC) connector")),(0,r.kt)("h3",{id:"12-context"},"1.2 CONTEXT"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"This section is non-normative"))),(0,r.kt)("p",null,"The main objective concerning the approach described in this section is to create a state-of-the-art compute-to-data architecture for automotive use cases (and beyond) based on standards and best practices around GAIA-X and W3C. To reach this aim, full semantic integration, search and query with focus on relations between entities and data sovereignty is focused. In contrast to a simple file-based data transfer, this shifts the responsibility for the"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"access,"),(0,r.kt)("li",{parentName:"ol"},"authorization to the data and"),(0,r.kt)("li",{parentName:"ol"},"processing of the data")),(0,r.kt)("p",null,"from the application development to the provider and hence ultimately, the actual owner of the data."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(15269).Z},(0,r.kt)("img",{alt:"Architecture Interaction",src:a(38204).Z,width:"261",height:"300"}))),(0,r.kt)("p",null,"Figure 1: Basic Overview about Knowledge Agents approach"),(0,r.kt)("p",null,"The most important concepts needed for the realization are summarized in Figure 1. The App in the figure serves the consumer by gathering, analyzing, and presenting the knowledge about business questions such as: How much of a certain material can be found in a specific vehicle series? It is assumed that the data which is needed to answer such questions is distributed over the network and cannot be found at one central place."),(0,r.kt)("p",null,"To help collecting the data over the network, ",(0,r.kt)("strong",{parentName:"p"},"Skills")," are introduced. A Skill is a pre-formulated query (or: procedure) with limited scope such as: List all vehicle series that contain material produced in a certain location. The Skill is used to access all federated data instances via the tenant (= authentication and authorization scope) of the caller."),(0,r.kt)("p",null,"A skill receives input in the form of a data set (we use a JSON notation in the following example):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[{"material":{"type":"literal","value":\u201cRubber\u201d},"location":{"type":"literal","value":\u201cPhuket\u201d}}]\n')),(0,r.kt)("p",null,"which drives the control flow, the filtering and aggregating  of the information, and finally producing an output data set, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[\n  {"series":{"type":"uri","value":"OEM#4711"},"oem":{"type":"uri","value":"OEM"},"weightKg":{"type":"literal","datatype":"http://www.w3.org/2001/XMLSchema#float",\u201d3.2\u201d}},\n  {"series":{"type":"uri","value":"EMO:0815"},"oem":{"type":"uri","value":"EMO"},"weightKg":{"type":"literal","datatype":"http://www.w3.org/2001/XMLSchema#float",\u201d1.4\u201d}}\n]\n')),(0,r.kt)("p",null,"In order to obtain the correct results in a federated system, all the participants of the skill execution need to have common understanding over the vocabulary (see following chapter). Relying on these conventions, an executor of a skill can calculate which providers are able to contribute or yield the necessary information in which sequence such that the resulting distributed operation will be performant."),(0,r.kt)("p",null,"This coordinating job is taken over by the ",(0,r.kt)("strong",{parentName:"p"},"Matchmaking Agent"),", an endpoint that is mandatory for any KA-enabled Dataspace Participant. For that purpose, the Matchmaking Agent supports the SPARQL specification (see chapter 3) with the effect that the dataspace can be traversed as one large data structure. Hereby, the Consumer-Side Matchmaking Agent will \u2013 as driven by the builtin federation features of SPARQL - interact with the KA-enabled EDC in order to negotiate and perform the transfer of Sub-Skills which are partial expressions of the original SPARQL command to other Dataspace Participants."),(0,r.kt)("p",null,"In turn, upon successful transfer of the Sub-Skill, the Provider-Side Matchmaking Agent(s) will be activated by their respective EDC. The precondition for this activation is of course that the Provider EDC first needs to offer a so-called Graph Asset:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Graph Assets")," are a variant of ordinary Data Assets (see the ANNEX) in the Catena-X EDC Standard; while Data Assets typically refer to an actual backend system (e.g., an Blob in an Object Store, an AAS server, a REST endpoint), Graph Assets introduce another intermediary instance, the so-called Binding Agent."),(0,r.kt)("p",null,"Simply put, the ",(0,r.kt)("strong",{parentName:"p"},"Binding Agent")," is a restricted version of the Matchmaking Agent (which speaks a profile, i.e., a subset of SPARQL specification, see the ANNEX) which is just focused on translating Sub-Skils of a particular business domain (Bill-Of-Material, Chemical Materials, Production Sites, etc.) into proper SQL- or REST based backend system calls. This scheme has several advantages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For different types of backend systems, business domains and usage scenarios, different Binding Agent implementations (Caching Graph Store, SQL Binding Engine, REST Binding Engine) can be switched-in without affecting both the shared dataspace/semantic model and the mostly immutable backend systems/data models as well."),(0,r.kt)("li",{parentName:"ul"},"Access to the backend systems can be optimized by JIT compilation technology."),(0,r.kt)("li",{parentName:"ul"},"The same backend system/data model can be used in various Graph Assets/Use Cases und different roles and policies."),(0,r.kt)("li",{parentName:"ul"},"Access to the backend system is decoupled by another layer of security, such that additional types of policies (role-based row-level and attribute-level access) can be implemented in the interplay of Matchmaking and Binding Agents."),(0,r.kt)("li",{parentName:"ul"},"There is a clear distinction between advanced graph operations (including type inference and transitive/recursive traversal also via EDC) on the Matchmaking Level and efficient, but more restricted and secure graph operations on the Binding/Data Level.")),(0,r.kt)("p",null,"As mentioned earlier, essential for the realization of the idea is the creation, governance and discoverability of a well-defined semantic catalogue (the ",(0,r.kt)("strong",{parentName:"p"},"Federated Catalogue"),") which together with the data inside the Graph Assets forms a ",(0,r.kt)("strong",{parentName:"p"},"Federated Knowledge Graph"),'. In this context, the definition of a Knowledge Graph (KG) as "a multi relational graph composed of entities and relations which are regarded as nodes and different types of edges, respectively" is extended with aspect of federation. We see a Federated KG as a KG where entities and relations reside physically distributed over multiple systems connected through a network and a common query language. We see semantic metadata as structural information to scope the entities and relations of the KG based on ontological principles. This is the agreement, necessary for the successful interplay of the distributed parties within the data space.'),(0,r.kt)("p",null,"To summarize, the Knowledge Agent standard shall achieve the following abilities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the ability to define well-formed and composable computations/scripts (skills) which operate over various assets of various business partners."),(0,r.kt)("li",{parentName:"ul"},"the ability to invoke and dynamically distribute these (sub-)skills over the relevant partners/connectors using an extensible agent interface."),(0,r.kt)("li",{parentName:"ul"},'the ability to safely provide data and service assets via appropriate agent implementations which "bind" the skill to the backend execution engines (rather than mapping data).'),(0,r.kt)("li",{parentName:"ul"},"the ability for an agent/connector/business partner to decide",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"whether to hide particular data and computations inside a sub-skill"),(0,r.kt)("li",{parentName:"ul"},"whether to delegate/federate particular computations/sub-skills to other agents"),(0,r.kt)("li",{parentName:"ul"},"whether to migrate or clone an agent/asset from a partner"))),(0,r.kt)("li",{parentName:"ul"},"the ability to describe data and service assets as well as appropriate federation policies in the IDS vocabulary in order to allow for a dynamic matchmaking of skills and agents."),(0,r.kt)("li",{parentName:"ul"},"the ability to define domain/use case-based ontologies which form the vocabulary used in the skill definitions."),(0,r.kt)("li",{parentName:"ul"},"the ability to visualize and develop the ontologies and skills in appropriate SDKs and User Experience components.")),(0,r.kt)("h3",{id:"13-architecture-overview"},"1.3 ARCHITECTURE OVERVIEW"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"This section is non-normative"))),(0,r.kt)("p",null,"This chapter gives an overview how the concept elaborated in previous chapter should be implemented. In this context generic building blocks were defined (see Figure 3) which can be implemented with different open source or COTS solutions. In the scope of Catena-X project these building blocks are instantiated with a reference implementation based on open source components (the Knowledge Agents KIT). The detailed architecture following this reference implementation can be found here: ",(0,r.kt)("a",{parentName:"p",href:"https://catenax-ng.github.io/product-knowledge/docs/architecture"},"https://catenax-ng.github.io/product-knowledge/docs/architecture"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(86384).Z},(0,r.kt)("img",{alt:"Architecture High-Level",src:a(47054).Z,width:"400",height:"260"}))),(0,r.kt)("p",null,"Figure 3: KA building blocks (Solid-Lines Denote Standard-Affected Layers & Components)"),(0,r.kt)("p",null,"In the following paragraphs, all building blocks relevant for this standard are introduced:"),(0,r.kt)("h4",{id:"semantic-ontology-models"},"Semantic (Ontology) Models"),(0,r.kt)("p",null,"Ontologies, as defined by W3C Web Ontology Language OWL 2 (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/OWL/"},"https://www.w3.org/OWL/"),") standard, provide the core of the KA catalogue. OWL comes with several interpretation profiles (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/owl2-profiles/"},"https://www.w3.org/TR/owl2-profiles/"),") for different types of applications. For model checking and data validation (not part of this standard), the Rule Logic (RL) profile is used. For query answering/data processing (part of this standard), the Existential Logic (EL) profile (on the Dataspace Layer) and the Query Logic (QL) profile (on the Binding Layer) is used. Furthermore, RDF Terse Triple Language TTL (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/turtle/"},"https://www.w3.org/TR/turtle/"),") format is used to divide/merge large ontologies into/from modular domain ontology files."),(0,r.kt)("p",null,"Semantic Models are hosted in the Ontology Hub that is a central service to the dataspace based on git over http(",(0,r.kt)("a",{parentName:"p",href:"https://www.git-scm.com/docs/http-protocol"},"https://www.git-scm.com/docs/http-protocol"),")."),(0,r.kt)("h4",{id:"data-consumption-layerquery-definition"},"Data Consumption Layer/Query Definition"),(0,r.kt)("p",null,"This layer comprises all applications which utilize provided data and functions of business partners to achieve a direct business impact and frameworks which simplify the development of these applications. Thus, this layer focuses on using a released Semantic Model (or a use-case/role-specific excerpt thereof) as a vocabulary to build flexible queries (Skills) and integrating these Skills in data consuming apps. Skills can be easily integrated in these apps as stored procedure. Hence, skill and app development can be decoupled to increase efficiency of the app development process."),(0,r.kt)("p",null,"SPARQL 1.1 specification (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-query/"},"https://www.w3.org/TR/sparql11-query/"),") is used as a language and protocol to search for and process data across different business partners. As a part of this specification,  the QUERY RESULTS JSON (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-results-json/"},"https://www.w3.org/TR/sparql11-results-json/"),") and the QUERY RESULTS XML (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/rdf-sparql-XMLres/"},"https://www.w3.org/TR/rdf-sparql-XMLres/"),") formats are used to represent both the answer sets generated by SPARQL skills and the sets of input parameters that a SPARQL skill should be applied to. For answer sets, additional formats such as the QUERY RESULTS CSV and TSV (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-results-csv-tsv/"},"https://www.w3.org/TR/sparql11-results-csv-tsv/"),") format may be supported. Required is the ability to store and invoke SPARQL queries as parameterized procedures in the dataspace; this is a KA-specific extension to the SPARQL endpoint (KA-MATCH, see ANNEX) that is captured the concise Openapi specification  (",(0,r.kt)("a",{parentName:"p",href:"https://catenax-ng.github.io/product-knowledge/docs/development-view/api"},"https://catenax-ng.github.io/product-knowledge/docs/development-view/api"),"). This API allows for an extended response behaviour which introduces a warning status code \u201c203\u201d and an additional response header \u201ccx_warning\u201d that lists abnormal events or trace information that appeared during the processing in a data-sovereign manner."),(0,r.kt)("h4",{id:"dataspace-layer"},"Dataspace Layer"),(0,r.kt)("p",null,"The base Dataspace-building technology is the Eclipse Dataspace Connector (EDC) which should be extended to operate as a HTTP/S contracting & transfer facility for the SPARQL-speaking Matchmaking Agent. To resolve dataspace offers and addresses using the ontological vocabulary, the Matchmaking Agent keeps a default meta-graph, the Federated Catalogue, that is used to host the Semantic Model and that is regularly synchronized with the relevant dataspace information including the offers of surrounding business partners/EDCs."),(0,r.kt)("p",null,"The EDC interacts with the so-called Matchmaking Agent which is the first stage of SPARQL processing. It operates as the main invocation point to the Data Consuming Layer (using the KA-MATCH SPARQL profile). Furthermore, It operates as the main bridging point between incoming EDC transfers (from an \u201cAgent Source\u201d in the KA-TRANSFER SPARQL profile) and the underlying Binding Layer (speaking the KA-BIND SPARQL profile). And it implements federation by delegating any outgoing SERVICE/GRAPH contexts back to the EDC."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(32707).Z},(0,r.kt)("img",{alt:"Dataspace Layer",src:a(14034).Z,width:"500",height:"179"}))),(0,r.kt)("p",null,"Figure 4: Standard-Affected Dataspace Components"),(0,r.kt)("p",null,"The relevant profiles and asset descriptions are explained in detail in the ANNEX."),(0,r.kt)("p",null,"Since EDC and Matchmaking Agent are bidirectionally coupled, implementations could merge Data Plane and Matchmaking Agent into a single package, the so-called Agent Plane. Agent Planes and ordinary Data Planes can co-exist due to our design choices."),(0,r.kt)("p",null,"The so called Federated Catalogue is an RDF data storage facility for the Matchmaking Agent. It could be an in-memory triple store (that is restored via downloading TTL and configuration files upon restart) or an ordinary relational database that has been adapted to fit to the chosen Matchmaking Agent implementation. One example of such an interface is the RDF4J SAIL compliant to all RDF4J based SPARQL engines."),(0,r.kt)("p",null,"The Federated Catalogue should initially download the complete Semantic Model that has been released for the target environment from the Ontology Hub. It should also contain a list of business partners and their roles which form the surrounding dataspace neighborhood of the tenant. For that purpose, It could use GPDM and Self-Description Hub services in order to lookup EDC addresses and additional domain information (sites, geo addresses). It should then be frequently updated with \u201clive\u201d information by invoking the EDC data management API to regularly obtain catalogue information.\nThe portion of the Semantic Model describing these meta-data (Business Partners, Sites, Addresses, Use Cases, Use Case Roles, Connectors & Assets) is called the Common domain ontology and is mandatory for all releases/excerpts of the Semantic Model (",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/catenax-ng/product-knowledge/main/ontology/common_ontology.ttl"},"https://raw.githubusercontent.com/catenax-ng/product-knowledge/main/ontology/common_ontology.ttl"),")."),(0,r.kt)("h4",{id:"backend-systems"},"Backend Systems"),(0,r.kt)("p",null,"Legacy IT landscape of data space participants consisting of various backend systems, such as PLM, ERP, ObjectStores mostly located in the Enterprise Intranet and hosted/goverened by the business departments. Here, the actual data sources of all Catena-X participants is originated where they are served using custom, but mission-critical business or technological APIs in specific, transaction-oriented formats."),(0,r.kt)("h4",{id:"virtualization-layer"},"Virtualization Layer"),(0,r.kt)("p",null,"The data virtualization layer fulfills the function of making the company internal, department-hosted data available for cross-company data exchange scenarios, e.g. via data lakes, data warehouses or other enterprise middleware. Instead of connecting each and every backend system separatly to an external data source/sink (such as Catena-X) it often makes sense to have this additional layer on top of backend systems which orchestrates data demand and supply across the systems. Depending on company IT architecture different technologies can be used to build up this layer."),(0,r.kt)("h4",{id:"binding-layer"},"Binding Layer"),(0,r.kt)("p",null,"Finally, the missing link between the Dataspace Layer and the Virtualization Layer is the Binding Layer. Hereby rather than mapping the data between different formats (e.g. Data Tables in CSV Format to and from Data Graphs in the TTL format) which is a mostly resource-consuming data transformation process, binding rather rewrites the actual queries (e.g. SPARQL into SQL, SPARQL into GraphQL or REST). In order to make this query rewriting not too complicated, a restricted subset of SPARQL is envisaged."),(0,r.kt)("h3",{id:"14-conformance"},"1.4 CONFORMANCE"),(0,r.kt)("p",null,"As well as sections marked as non-normative, all authoring guidelines, diagrams, examples, and notes\nin this specification are non-normative. Everything else in this specification is normative."),(0,r.kt)("p",null,"The key words ",(0,r.kt)("strong",{parentName:"p"},"MAY"),", ",(0,r.kt)("strong",{parentName:"p"},"MUST"),", ",(0,r.kt)("strong",{parentName:"p"},"MUST NOT"),", ",(0,r.kt)("strong",{parentName:"p"},"OPTIONAL"),", ",(0,r.kt)("strong",{parentName:"p"},"RECOMMENDED"),", ",(0,r.kt)("strong",{parentName:"p"},"REQUIRED"),", ",(0,r.kt)("strong",{parentName:"p"},"SHOULD"),"\nand ",(0,r.kt)("strong",{parentName:"p"},"SHOULD NOT")," in this document document are to be interpreted as described in BCP 14 ","[RFC2119][RFC8174]","\nwhen, and only when, they appear in all capitals, as shown here."),(0,r.kt)("h3",{id:"15-proof-of-conformity"},"1.5 PROOF OF CONFORMITY"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"This section is non-normative"))),(0,r.kt)("p",null,"All participants and their solutions will need to proof, that they are conform with the Catena-X standards.\nTo validate that the standards are applied correctly, Catena-X employs Conformity Assessment Bodies (CABs).\nPlease refer to the association homepage for the process of conformity assessment and certification."),(0,r.kt)("p",null,"The Conformity Assessment Criteria (and proposed Conformity Assessment Methods) will be listed in Chapter 2 for the respective building blocks\nthat are relevant for KA Enablement."),(0,r.kt)("p",null,"Corresponding to this standard, a test bed is provided under ","[https://catenax-ng.github.io/product-knowledge/docs/adoption-view/testbed]"," which covers most of the\nfollowing CACs and CAMs."),(0,r.kt)("h2",{id:"2-conformity-assessment-criteria"},"2. Conformity Assessment Criteria"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("em",{parentName:"p"},"This section is normantive"))),(0,r.kt)("h3",{id:"21-cac-for-edc"},"2.1 CAC for EDC"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"CAC"),(0,r.kt)("th",null,"Component"),(0,r.kt)("th",null,"Normative Statement"),(0,r.kt)("th",null,"Proposed Method"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.1"),(0,r.kt)("td",null,"EDC Control Plane"),(0,r.kt)("td",null,"MUST conform to the CX EDC HTTP Standard,",(0,r.kt)("br",null)," specifically MUST support the \u201cHttpProxy\u201d transfer process type"),(0,r.kt)("td",null,"See CX-0018")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.2"),(0,r.kt)("td",null,"EDC Control Plane"),(0,r.kt)("td",null,"MUST support the \u201cHttpProtocol\u201d transfer process type which ",(0,r.kt)("br",null)," operates as the \u201cHttpProxy\u201d standard, but additionally memorizes ",(0,r.kt)("br",null)," the \u201ctype\u201d property of the transferred asset in  ",(0,r.kt)("br",null)," the endpoint data reference properties (as property \u201cprotocol\u201d). ",(0,r.kt)("br",null)," When recreating the data address, this attribute is replacing the ",(0,r.kt)("br",null)," original \u201cHttpData\u201d constant."),(0,r.kt)("td",null,"Configuration Review",(0,r.kt)("br",null)," EDC property",(0,r.kt)("br",null)," edc.dataplane.selector.*",(0,r.kt)("br",null)," destinationtypes",(0,r.kt)("br",null)," should contain",(0,r.kt)("br",null)," HttpProtocol",(0,r.kt)("br",null),"  ",(0,r.kt)("br",null)," Data Consumers: CAB offers a TESTGRAPHASSET",(0,r.kt)("br",null)," Assessed Party successfully initiates a transfer ",(0,r.kt)("br",null)," Data Providers: Assessed Party offers a TESTGRAPHASSET",(0,r.kt)("br",null)," CAB successfully initiates a transfer")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.3"),(0,r.kt)("td",null,"EDC Control Plane"),(0,r.kt)("td",null,"MUST register at least one KA-Enabled Data Plane"),(0,r.kt)("td",null,"Configuration Review",(0,r.kt)("br",null)," EDC property ",(0,r.kt)("br",null)," dc.dataplane.selector.*",(0,r.kt)("br",null)," sourcetypes",(0,r.kt)("br",null)," should contain",(0,r.kt)("br",null),"urn:cx-common#Protocol:w3c:Http=SPARQL")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.4"),(0,r.kt)("td",null,"EDC Control Plane"),(0,r.kt)("td",null,"SHOULD support dynamic endpoint callback listeners.",(0,r.kt)("br",null)," OR MUST register at least one Matchmaking Agent ",(0,r.kt)("br",null)," callback endpoint as listener"),(0,r.kt)("td",null,"Code/Configuration Review",(0,r.kt)("br",null)," EDC extension org.eclipse.edc:transfer-pull-http-dynamic-receiver is installed ",(0,r.kt)("br",null)," OR edc.receiver.http ",(0,r.kt)("br",null)," EDC property points to the Matchmaking Agent callback endpoint")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.5"),(0,r.kt)("td",null,"EDC Control Plane"),(0,r.kt)("td",null,"MAY support an extended validation endpoint for extended ",(0,r.kt)("br",null)," graph policies which need access to a runtime context"),(0,r.kt)("td",null,"Assessed Party demonstrates an endpoint which accepts a ",(0,r.kt)("br",null)," DAPS-signed graph policy backed claim token together ",(0,r.kt)("br",null)," with a JSON object representing the runtime context.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.6"),(0,r.kt)("td",null,"EDC Data Plane"),(0,r.kt)("td",null,"MUST conform to the CX EDC HTTP Standard, ",(0,r.kt)("br",null)," specifically MUST support the \u201cHttpProxy\u201d transfer process type ",(0,r.kt)("br",null)," in combination with the \u201cHttpData\u201d asset type"),(0,r.kt)("td",null,"See CX-0018")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.1.6"),(0,r.kt)("td",null,"EDC Data Plane"),(0,r.kt)("td",null,"MUST support the \u201cHttpProtocol\u201d transfer process type in ",(0,r.kt)("br",null)," combination with the urn:cx-common#Protocol:w3c:Http=SPARQL ",(0,r.kt)("br",null)," and urn:cx-common#Protocol:w3c:Http=SKILL asset types.",(0,r.kt)("br",null)," The registered Source implementation MUST support Graph Asset specifications and support the KA-TRANSFER protocol listed in the ANNEX. ",(0,r.kt)("br",null)," In particular it must process the \u201ccx_header\u201d parameter ",(0,r.kt)("br",null)," MUST support the \u201cheader:Accepts\u201d and \u201cheader:Host\u201d asset address properties.",(0,r.kt)("br",null)," MUST require the \u201cproxyBody\u201d, \u201cproxyQueryParams\u201d and ",(0,r.kt)("br",null)," \u201cproxyMethod\u201d asset address properties to be true.",(0,r.kt)("br",null)," MUST require the \u201cproxyPath\u201d asset address properties to be false.",(0,r.kt)("br",null)," MUST rewrite the query (as parameter or body)  ",(0,r.kt)("br",null)," to replace all occurrences of the asset:prop:id property ",(0,r.kt)("br",null)," by the \u201cbaseUrl\u201d property",(0,r.kt)("br",null)," MAY rewrite the query driven by additional asset address properties (\u201csh:shapeGraph\u201d)",(0,r.kt)("br",null)," MAY validate the query using an extended validation ",(0,r.kt)("br",null)," endpoint in the Control Plane and by deriving ",(0,r.kt)("br",null)," additional runtime context from parsing the query and the payload",(0,r.kt)("br",null)," MUST delegate to the Matchmaking Agent using the KA-MATCH profile"),(0,r.kt)("td",null,"Code/Configuration Review",(0,r.kt)("br",null)," Data Provider: Assessed Party offers a TESTGRAPHASSET",(0,r.kt)("br",null)," CAB performs a transfer ",(0,r.kt)("br",null)," Data Consumer: CAB offers a TESTGRAPHASSET",(0,r.kt)("br",null)," Assessed Party performs a transfer")))),(0,r.kt)("h3",{id:"22-cac-for-matchmaking-agent"},"2.2 CAC for Matchmaking Agent"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"CAC"),(0,r.kt)("th",null,"Component"),(0,r.kt)("th",null,"Normative Statement"),(0,r.kt)("th",null,"Proposed Method"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.1"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MUST support an endpoint callback conforming to the CX EDC HTTP"),(0,r.kt)("td",null,"See CX-0018",(0,r.kt)("br",null)," Assessed Party performs a call with a TESTENDPOINTDATAREFERENCE with a CAB-given KA-MATCH endpoint. ",(0,r.kt)("br",null)," A subsequent call with a TESTENDPOINTSPARQL will hit the given target. ")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.2"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MUST execute \u201cService <url>\u201d contexts where the ",(0,r.kt)("br",null)," url starts with the \u201cedc\u201d or \u201cedcs\u201d schema, ",(0,r.kt)("br",null)," by parsing the sub-context or the url ",(0,r.kt)("br",null)," for an assetName (url#assetName or \u201cGraph <assetName>\u201d) ",(0,r.kt)("br",null)," and subsequently engage into a \u201cHttpProtocol\u201d ",(0,r.kt)("br",null)," negotiation/transfer process with the Control plane addressed ",(0,r.kt)("br",null)," by the url when replacing the \u201cedc\u201d scheme ",(0,r.kt)("br",null)," with \u201chttp\u201d and the \u201cedcs\u201d scheme with \u201chttps\u201d respectively",(0,r.kt)("br",null)," MAY perform \u201cService <url>\u201d calls where url ",(0,r.kt)("br",null)," is bound to multiple addresses simultaneously"),(0,r.kt)("td",null,"CAB offers TESTGRAPHASSET",(0,r.kt)("br",null)," Assessed Party performs a TESTSERVICESPARQL to demonstrate successful delegation",(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.3"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MUST support the \u201c/agent\u201d GET endpoint ",(0,r.kt)("br",null)," of the KA-MATCH SPARQL profile"),(0,r.kt)("td",null,"CAB offers TESTSKILLASSET",(0,r.kt)("br",null)," Assessed Party performs a parameterized TESTGETSKILL request to successfully demonstrate invocation variants and error behaviour",(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.4"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MUST implement the \u201c/agent\u201d POST endpoint of the ",(0,r.kt)("br",null)," KA-MATCH SPARQL profile"),(0,r.kt)("td",null,"CAB offers TESTSKILLASSET",(0,r.kt)("br",null)," Assessed Party performs a parameterized TESTPOSTSKILL request to successfully demonstrate invocation variants and error behaviour",(0,r.kt)("div",null))),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.5"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MUST implement the \u201c/agent/skill\u201d POST endpoint ",(0,r.kt)("br",null)," of the KA-MATCH SPARQL profile"),(0,r.kt)("td",null,"Assessed Party invokes the endpoint using a TESTSKILL ",(0,r.kt)("br",null)," to successfully register a skill ",(0,r.kt)("br",null)," Assessed Party then performs a parameterized TESTGETREGISTEREDSKILL request to successfully demonstrate invocation.")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.6"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"MAY perform a realm-mapping from the tenant domain ",(0,r.kt)("br",null),"(Authentication Scheme, such as API-Key and Oauth2) ",(0,r.kt)("br",null)," into the dataspace domain (EDC tokens)"),(0,r.kt)("td",null,"Assessed Party demonstrates three TESTAUTHENTICATION calls, a successful one with a valid authentication code/token and two failing calls one with an invalid and one with a lacking code/token")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"2.2.7"),(0,r.kt)("td",null,"Matchmaking Agent"),(0,r.kt)("td",null,"SHOULD operate on the Federated Catalogue as an RDF store."),(0,r.kt)("td",null,"CAB changes its catalogue ",(0,r.kt)("br",null)," Assessed Party demonstrates the DATASPACE skill reflecting that change")))),(0,r.kt)("h3",{id:"23-cac-for-federated-catalogue"},"2.3 CAC for Federated Catalogue"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"CAC"),(0,r.kt)("th",null,"Component"),(0,r.kt)("th",null,"Normative Statement"),(0,r.kt)("th",null,"Proposed Method"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.3.1"),(0,r.kt)("td",null,"Federated Catalog"),(0,r.kt)("td",null,"MUST contain the Catena-X Ontology ",(0,r.kt)("br",null)," relevant to the respective release."),(0,r.kt)("td",null,"CAB accesses the Catena-X Ontology in the Ontology Hub.",(0,r.kt)("br",null),"Assessed Party performs a TESTONTOLOGY retrieval to validate they are equivalent.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.3.2"),(0,r.kt)("td",null,"Federated Catalog"),(0,r.kt)("td",null,"MUST contain data instantiating the Catena-X Common Domain Ontology (cx-common) ",(0,r.kt)("br",null)," related to the business partners of the assessed tenant"),(0,r.kt)("td",null,"Assessed Party performs a TESTCATALOGUE retrieval to validate the available instance data against the BPNLs including the CAB")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.3.3"),(0,r.kt)("td",null,"Federated Catalog"),(0,r.kt)("td",null,"MUST frequently update catalogue data instantiating ",(0,r.kt)("br",null)," the Common Domain Ontology of the Semantic Model"),(0,r.kt)("td",null,"Assessed Party performs an EDC catalogue lookup with the CAB EDC as a provider ",(0,r.kt)("br",null)," Assessed Party performs a TESTCABASSETS retrieval to demonstrate that both catalogues are synchronized.")))),(0,r.kt)("h3",{id:"24-cac-for-binding-agents"},"2.4 CAC for Binding Agents"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"CAC"),(0,r.kt)("th",null,"Component"),(0,r.kt)("th",null,"Normative Statement"),(0,r.kt)("th",null,"Proposed Method"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.4.1"),(0,r.kt)("td",null,"Data Binding Agent (Only relevant for Enablement Service Provider)"),(0,r.kt)("td",null,"MUST implement the POST endpoint of the KA-BIND SPARQL profile"),(0,r.kt)("td",null,"Assessed Party performs a TESTBINDINGSPARQLPOST call to demonstrate profile support")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.4.2"),(0,r.kt)("td",null,"Data Binding Agent (Only relevant for Enablement Service Provider)"),(0,r.kt)("td",null,"MAY implement the GET endpoint of the KA-BIND SPARQL profile"),(0,r.kt)("td",null,"Assessed Party performs a TESTBINDINGSPARQLGET call to demonstrate profile support")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.4.3"),(0,r.kt)("td",null,"Function Binding Agent (Only relevant for Enablement Service Provider)"),(0,r.kt)("td",null,"MUST implement the POST endpoint of the FUNCTION RESTRICTED KA-BIND profile"),(0,r.kt)("td",null,"Assessed Party performs a TESTFUNCTIONBINDINGSPARQLPOST call to demonstrate profile support")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.4.4"),(0,r.kt)("td",null,"Function Binding Agent (Only relevant for Enablement Service Provider)"),(0,r.kt)("td",null,"MAY implement the GET endpoint of the FUNCTION RESTRICTED KA-BIND profile"),(0,r.kt)("td",null,"Assessed Party performs a TESTFUNCTIONBINDINGSPARQLGET call to demonstrate profile support")))),(0,r.kt)("h3",{id:"25-cac-for-ontology-hub"},"2.5 CAC for Ontology Hub"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"CAC"),(0,r.kt)("th",null,"Component"),(0,r.kt)("th",null,"Normative Statement"),(0,r.kt)("th",null,"Proposed Method"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.5.1"),(0,r.kt)("td",null,"Ontology Hub (only for Core Service Provider)"),(0,r.kt)("td",null,"MUST implement the git/http protocol"),(0,r.kt)("td",null,"Assessed Party authorizes the CAB for acccess. ",(0,r.kt)("br",null)," CAB uses a git client to perform the most common git operations (clone, checkout, commit/push, fetch). ",(0,r.kt)("br",null)," CAB verifies the folder layout and compliance of the files with the TTL standard.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"2.5.2"),(0,r.kt)("td",null,"Ontology Hub (only for Core Service Provider)"),(0,r.kt)("td",null,"MUST offer a public raw http/get access to the Catena-X ontology"),(0,r.kt)("td",null,"CAB uses an http client such as curl to test the raw file access and checks the file for compliance with the TTL standard.")))),(0,r.kt)("h2",{id:"3-references"},"3 REFERENCES"),(0,r.kt)("h3",{id:"31-normative-references"},"3.1 NORMATIVE REFERENCES"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CX\u20130018 Sovereign Data Exchange"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/TR/owl2-profiles/"},"OWL 2 Web Ontology Language Profiles (Second Edition)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/TR/sparql11-query/"},"SPARQL 1.1 Query Language")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/TeamSubmission/turtle/"},"Turtle - Terse RDF Triple Language")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.rfc-editor.org/rfc/rfc1736"},"Functional Requirements for Internet Resource Locators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.rfc-editor.org/rfc/rfc1737"},"Functional Requirements for Unique Resource Names")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.rfc-editor.org/rfc/rfc1738"},"Uniform Resource Locators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.rfc-editor.org/rfc/rfc3987"},"Internationalized Resource Identifiers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.git-scm.com/docs/http-protocol"},"git/http"))),(0,r.kt)("h2",{id:"annexes"},"ANNEXES"),(0,r.kt)("h3",{id:"sparql-profiles"},"SPARQL Profiles"),(0,r.kt)("p",null,"The SPARQL Protocol And RDF Query Language is a query language and protocol for the Semantic Web. SPARQL provides powerful constructs to search, filter, traverse and even update globally dispersed information written in the Resource Description Framework. In particular, it operates very well with self-contained sources which have been modelled using the Web Ontology Language OWL2."),(0,r.kt)("p",null,"OWL2 provides several profiles (language restrictions and/or computational barriers) with decreasing degrees of complexity and expressivity: RL (rule logic), EL (existential logic) and QL (query logic). The lower the degree, the more reasoning engines are likely to support the given profile in practical applications."),(0,r.kt)("p",null,"In that tradition, this document proposes three profiles for SPARQL"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"KA-BIND for binding large-volume (virtual) data lakes and API gateways to RDF processing"),(0,r.kt)("li",{parentName:"ul"},"KA-MATCH building on KA-BIND for orchestrating non-trivial computations on the individual and sovereign RDF processors"),(0,r.kt)("li",{parentName:"ul"},"KA-TRANSFER for tunneling KA-MATCH invocations through inter-company HTTP proxy infrastructure")),(0,r.kt)("p",null,"These profiles are meant to standardize the usage of SPARQL as a scripting language in Dataspaces."),(0,r.kt)("p",null,"Dataspaces are a peer-to-peer technology and requires to form contract agreements between multiple parties based on the actual data chains."),(0,r.kt)("p",null,"In Catena-X, for example, a Dataspace that is based on IDS/GAIA-X infrastructure, these data chains follow the deep supply chains of the Automotive Industry in order to derive previously impossible use cases in the areas of Traceability, Distributed Simulation, etc.  "),(0,r.kt)("p",null,"The profiles defined in this document are implemented in the KA API specification (",(0,r.kt)("a",{parentName:"p",href:"https://catenax-ng.github.io/product-knowledge/docs/development-view/api"},"https://catenax-ng.github.io/product-knowledge/docs/development-view/api"),")"),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(77048).Z},(0,r.kt)("img",{alt:"Dataspace Layer",src:a(29322).Z,width:"330",height:"162"}))),(0,r.kt)("h4",{id:"ka-bind"},"KA-BIND"),(0,r.kt)("p",null,"KA-BIND restricts SPARQL 1.1 (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-query/"},"https://www.w3.org/TR/sparql11-query/"),") in the following manner"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST-GET: the endpoint should support the http verbs POST and GET"),(0,r.kt)("li",{parentName:"ul"},'CONTENT-TYPE: the endpoint should support at least "application/sparql-result+json" (default) and "application/sparql-result+xml" media types in its responses (and resolve the request Accepts header accordingly). The endpoint should support the "application/sparql-query" media type.'),(0,r.kt)("li",{parentName:"ul"},"ONLY-SELECT: only the Query Form SELECT is supported"),(0,r.kt)("li",{parentName:"ul"},"OWL-QL: only interoperates with the OWL2 QL profile"),(0,r.kt)("li",{parentName:"ul"},"DEFAULT-GRAPH: operates only on the default graph: No graph references (no GRAPH contexts, no FROM or TO clauses)"),(0,r.kt)("li",{parentName:"ul"},"NO-FEDERATION: no federation, i.e. interaction with remote services (no SERVICE contexts)"),(0,r.kt)("li",{parentName:"ul"},"BOUND-PREDICATES: no variables in the predicate of triple patterns"),(0,r.kt)("li",{parentName:"ul"},"NO-LITERAL-SUBJECT: no literals in the subject of triple patterns"),(0,r.kt)("li",{parentName:"ul"},"BOUND-TYPE-OBJECT: if the predicate is rdf:type/a then the object cannot be a variable"),(0,r.kt)("li",{parentName:"ul"},"NO-INVERSE: no inverse predicates (InversePath)"),(0,r.kt)("li",{parentName:"ul"},"NO-TRANSITIVITY: no transitive predicates (OneOrMorePath, ZeroOrMorePath, ZeroOrOnePath)"),(0,r.kt)("li",{parentName:"ul"},"NO-NEGATION: no negated predicates (NegatedPath)"),(0,r.kt)("li",{parentName:"ul"},"NO-BLANK-SOURCE-NODE: no blank nodes in the source documents (but working with anonymous nodes in the query is still allowed)")),(0,r.kt)("h5",{id:"function-restricted-ka-bind"},"FUNCTION RESTRICTED KA-BIND"),(0,r.kt)("p",null,"FUNCTION RESTRICTED KA-BIND restricts KA-BIND in the following manner:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"VALUES_STATEMENTS: The WHERE body of the SELECT query must consist of a (possibly empty) series of VALUES statements followed by a (possibly empty) series of triple patterns.")),(0,r.kt)("h4",{id:"ka-match"},"KA-MATCH"),(0,r.kt)("p",null,"Let DRN be the subset of URN (and hence IRI) which denote assets in the Dataspace. Examples are"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"urn:cx-common#GraphAsset:oem:Diagnosis2022\nurn:cx-common#SkillAsset:RemainingUsefulLife\n")),(0,r.kt)("p",null,"GDRN is the subset of DRN which denote proper graph assets."),(0,r.kt)("p",null,"SDRN is the subset of DRN which denote skill assets."),(0,r.kt)("p",null,"Let DRL be the subset of URL (and hence IRI) which denote connector addresses in the Dataspace using the schemes edc or edcs."),(0,r.kt)("p",null,"If the DRL contains with an anchor part (#), we call the DRL qualified and that anchor part must url-encode a valid DRN."),(0,r.kt)("p",null,'If the DRL contains parameters, we call all parameter values which start with "@" the variable references.'),(0,r.kt)("p",null,"Examples are"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"edc://consumer-connector.private:8199\nedcs://oem-connector.public.io#urn%3Acx-common%23GraphAsset%3Aoem%3ADiagnosis2022\nedcs://supplier-connector.public.io#urn%3Acx-common%23SkillAsset%3ARemaniningUsefulLife?vin=@vehicle&troubleCode=@dtc\n")),(0,r.kt)("p",null,"KA-MATCH restricts SPARQL (",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-query/"},"https://www.w3.org/TR/sparql11-query/"),") in the following manner"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"LIMITED-FEDERATION: any SERVICE context which binds to a DRL",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"if the DRL is unqualified, it must have EXACTLY ONE GRAPH sub-context which points to a GDRN. You may use only KA-BIND inside of that GRAPH context."),(0,r.kt)("li",{parentName:"ul"},"If the DRL is qualified:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"if it anchors a SDRN then the context must only contain a sequence of BIND statements, because the SERVICE represents a (multi-valued) skill call.  "),(0,r.kt)("li",{parentName:"ul"},"it must NOT have ANY GRAPH sub-context. You may use only KA-BIND inside of the service context."))))),(0,r.kt)("li",{parentName:"ul"},"OWL-EL: only interoperates with the OWL2 EL profile"),(0,r.kt)("li",{parentName:"ul"},"LIMITED-GRAPH: GRAPH references (FROM, TO or GRAPH contexts) must point to a GDRN or qualified DRL anchoring a GDRN."),(0,r.kt)("li",{parentName:"ul"},"NO-LITERAL-SUBJECT: no literals in the subject of triple patterns")),(0,r.kt)("p",null,"KA-MATCH extends SPARQL in the following manner"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST-GET-OPTIONS: the endpoint should support the http verbs POST, GET and OPTIONS - the latter for the purpose to control cross-domain scripting (which is optional, so returning an error status is sufficient)."),(0,r.kt)("li",{parentName:"ul"},'POST-SKILL: There MUST be a sub-path "/skill" to the SPARQL endpoint which accepts a non-empty body of media type "application/sparql-query" and contains a valid  KA-MATCH SPARQL text.  It also requires a query parameter "asset" which is a valid SDRN. It returns a success code when these conditions are met and the text could be successfully stored. In that case, you may use the asset SDRN (for example as the anchor of a qualified DRL) in future GET and POST calls. The query text can contain variable references.'),(0,r.kt)("li",{parentName:"ul"},'ASSET-TARGET: In both the GET and POST Http Verbs, you may use the query parameter "asset" which should be set to some qualified DRL (global dataspace asset) or DRN (local asset). If the body of the request (POST) or the query parameter (POST or GET) is a valid SPARQL query (media type "application/sparql-query") then the asset MUST anchor a valid GDRN (in which case the query should be executed as if the TO/FROM clause would be set to the GDRN). Otherwise, the asset MUST anchor a valid SDRN (in which case the previously store query text from POST-SKILL is executed). We call the query text from either the query parameter (GET), the body (POST) or the skill asset lookup (GET and POST) the resolved query.'),(0,r.kt)("li",{parentName:"ul"},'PARAMETRIZED-QUERY: The resolved query may contain variable references (literals or iris starting with @ e.g., "@troubleCode"^^xsd:string or <@vin^^cx:Vehicle>). For each referenced variable, there must be either at least one correspondingly-named query parameter (GET, POST) or the media type of the body (POST) is one of "application/sparql-results+json" or "application/sparql-results+xml" and the variable is bound there. For variables bound as query parameters, there is the option to build tuple-based combinations by using a parenthesis as the prefix of a variable/parameter name "(" and a closing parenthesis ")" as a suffix of a substitution.'),(0,r.kt)("li",{parentName:"ul"},'QUERY-LANG: The query parameter "queryLn" can be used, but is currently fixed to SPARQL.'),(0,r.kt)("li",{parentName:"ul"},'WARNINGS: KA-MATCH may indicate a successful result that has been generated with additional warnings regarding the execution with the status code "203". Both in that case as well as in case of technically unsuccessful calls (Status Code <200 or >299), a response header \u201ccx_warning\u201d bound to a JSON structure that lists abnormal events or trace information that appeared during the processing.')),(0,r.kt)("p",null,"The cx_warning JSON structure is a list of objects which contain at least the following properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"source-tenant"),(0,r.kt)("li",{parentName:"ul"},"source-asset"),(0,r.kt)("li",{parentName:"ul"},"target-tenant"),(0,r.kt)("li",{parentName:"ul"},"target-asset"),(0,r.kt)("li",{parentName:"ul"},"problem"),(0,r.kt)("li",{parentName:"ul"},"context")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[{"source-tenant":"http://consumer-control-plane:8181/management","source-asset":"urn:x-arq:DefaultGraph","target-tenant":"edcs://knowledge.dev.demo.catena-x.net/oem-edc-control/BPNL00000003COJN","target-asset":"urn:cx-common#GraphAsset:oem:Diagnosis20222","problem":"Failure invoking a remote batch: Result may be partial.","context":"-1414472378"}]\n')),(0,r.kt)("p",null,"Depending on data sovereignty rules, the individual fields may be shaded or replaced by pseudonyms such that they could be looked up via different (organizational)\nchannels if needed."),(0,r.kt)("h4",{id:"ka-transfer"},"KA-TRANSFER"),(0,r.kt)("p",null,'KA-TRANSFER is a variant of KA-MATCH which allows to proxy the payloads over headerless or fixed-header protocols by implementing the following "WRAP-HEADERS" strategy:'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"KA-MATCH Component"),(0,r.kt)("th",{parentName:"tr",align:null},"KA-MATCH Name"),(0,r.kt)("th",{parentName:"tr",align:null},"KA-MATCH Component"),(0,r.kt)("th",{parentName:"tr",align:null},"KA-MATCH Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Request Header"),(0,r.kt)("td",{parentName:"tr",align:null},"Accept"),(0,r.kt)("td",{parentName:"tr",align:null},"Request URL Query Parameter"),(0,r.kt)("td",{parentName:"tr",align:null},"cx_accepts"),(0,r.kt)("td",{parentName:"tr",align:null},"This header is integral part of the protocol, since federating agents may require a particular result format in their internal processing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Response Header"),(0,r.kt)("td",{parentName:"tr",align:null},"cx_warnings"),(0,r.kt)("td",{parentName:"tr",align:null},"Response multi-part body"),(0,r.kt)("td",{parentName:"tr",align:null},"cx_warnings"),(0,r.kt)("td",{parentName:"tr",align:null},"This header is integral part of the protocol in order to annotate and analyze a robust distributed processing which is always subject to unforeseen failures.")))),(0,r.kt)("h3",{id:"agent-related-edc-assets"},"Agent-Related EDC Assets"),(0,r.kt)("p",null,"In the following, we describe the convention how agent-related assets should be defined and represented in EDC."),(0,r.kt)("p",null,"Agent-related assets are"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Graph Assets: Assets providing access to a binding agent."),(0,r.kt)("li",{parentName:"ul"},"Skill Assets: Assets providing access to logic that is stored in the matchmaking agent.")),(0,r.kt)("p",null,"The asset definition in EDC contains of two parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'the "asset" part containing a description that is part of any published/offered catalogue that contains the asset.'),(0,r.kt)("li",{parentName:"ul"},'the "dataAddress" part containing EDC internal routing configuration for performing data transfers from/to the asset.')),(0,r.kt)("p",null,'In particular, the "asset" part has a natural correspondence in the RDF representation of the Federated Catalogue. To\ndefine this correspondence in the following, we assume the following prefix abbreviations to denote complete IRIs.'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prefix"),(0,r.kt)("th",{parentName:"tr",align:null},"Namespace"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rdf"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"},"http://www.w3.org/1999/02/22-rdf-syntax-ns#"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rdfs"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.w3.org/2000/01/rdf-schema#"},"http://www.w3.org/2000/01/rdf-schema#"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"xsd"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.w3.org/2001/XMLSchema#"},"http://www.w3.org/2001/XMLSchema#"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sh"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.w3.org/ns/shacl#"},"http://www.w3.org/ns/shacl#"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cx-common"),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx_common#",">")))),(0,r.kt)("p",null,'The "asset" part itself consists of a "properties" section which is a set of string-based key-value pairs.\nIn the following table, we list those keys which are of relevance for both Graph and Skill Assets and hence are mapped to an RDF expression.'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"RDF Representation"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Property Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:id"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Plain Id of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},"BIND(","<","value",">"," as ?asset). ?asset cx-common:id ","<","value",">","."),(0,r.kt)("td",{parentName:"tr",align:null},"urn:cx-common#GraphAsset?oem:Diagnosis2022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cx-common:role"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Use Case Role IRI"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset cx-common:role value."),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx-telematics#OEM",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:name"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Default Name of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:name "value"^^xsd:string.'),(0,r.kt)("td",{parentName:"tr",align:null},"Diagnosis Data 2022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:name@de"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"German Name of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:name "value"^^xsd:string@de.'),(0,r.kt)("td",{parentName:"tr",align:null},"Diagnose Daten 2022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:description"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"Default Description of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:description "value"^^xsd:string.'),(0,r.kt)("td",{parentName:"tr",align:null},"Telematics Data for Series 213 from 20022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:description@de"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"German Description of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:description "value"^^xsd:string@de.'),(0,r.kt)("td",{parentName:"tr",align:null},"Telematik Daten f\xfcr BR 213 aus 20022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:version"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"Version of the Asset"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset cx-common:version ","<","value",">","."),(0,r.kt)("td",{parentName:"tr",align:null},"Diagnosis Data 2022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:contenttype"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Mime Type of Asset response"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:contenttpe "value".'),(0,r.kt)("td",{parentName:"tr",align:null},"application/sparql-results+json, application/sparql-results+xml")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rdf:type"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Type IRI of the asset"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset rdf:type value."),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx-common#GraphAsset",">"," for Graphs, ","<"," urn:cx-common#SkillAsset",">"," for Skills")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rdfs:isDefinedBy"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Use Case / Domain Ontology IRIs"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset rdfs:isDefinedBy value."),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx-telematics",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"common:protocol"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Asset Protocol IRI"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset cx-common:protocol value."),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx-common#Protocol:w3c:Http=SPARQL",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sh:shapesGraph"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"SHACL Description of Graph"),(0,r.kt)("td",{parentName:"tr",align:null},"?asset sh:shapesGraph ","<","graph",">",". where the constraints can be accessed via GRAPH ","<","graph",">"," {}"),(0,r.kt)("td",{parentName:"tr",align:null},"SHACL TTL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cx-common:isFederated"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether this asset should be synchronized in the Federated Catalogue"),(0,r.kt)("td",{parentName:"tr",align:null},'?asset cx-common:protocol "value"^^xsd:boolean.'),(0,r.kt)("td",{parentName:"tr",align:null},"true")))),(0,r.kt)("h4",{id:"graph-assets"},"Graph Assets"),(0,r.kt)("p",null,'The "dataAddress" part for Graph Assets also consists of a "properties" section which is a set of string-based key-value pairs. Since that part is not public, it will not have an RDF representation.'),(0,r.kt)("p",null,"In the following table, we list those keys which are of relevance for both Graph and Skill Assets and hence are mapped to an RDF expression."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Property Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:id"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Plain Id of the Graph Asset"),(0,r.kt)("td",{parentName:"tr",align:null},"urn:cx-common#GraphAsset:oem:Diagnosis2022")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Asset Protocol IRI"),(0,r.kt)("td",{parentName:"tr",align:null},"<","urn:cx-common#Protocol:w3c:Http=SPARQL",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"baseUrl"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"URL of the binding Agent"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://binding-agent:8082/sparql"},"https://binding-agent:8082/sparql"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyPath"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"must be set to \u201cfalse\u201d"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyQueryParams"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},'must be set to "true"'),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyBody"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},'must be set to "true"'),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authKey"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"optional authentication header"),(0,r.kt)("td",{parentName:"tr",align:null},"X-Api-Key, Authorization")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authCode"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"optional authentication value"),(0,r.kt)("td",{parentName:"tr",align:null},"my-api-key, Basic Adm9axmJhcg==")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"header:Host"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"optional fixed Host header forwarded to the endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"127.0.0.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"header:Accepts"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"optional fixed Accepts header forwarded to the endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"application/sparql-results+json")))),(0,r.kt)("h4",{id:"skill-assets"},"Skill Assets"),(0,r.kt)("p",null,"In the following table, we list those keys which are of relevance for both Graph and Skill Assets and hence are mapped to an RDF expression."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Property Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"asset:prop:id"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Plain Id of the Skill Asset"),(0,r.kt)("td",{parentName:"tr",align:null},"urn:cx-common#SkillAsset:RemainingUsefulLife")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"baseUrl"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"must be empty"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"A valid KA-MATCH SPARQL query"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyPath"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"must be set to \u201cfalse\u201d"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyQueryParams"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},'must be set to "true"'),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxyBody"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},'must be set to "false"'),(0,r.kt)("td",{parentName:"tr",align:null},"false")))))}u.isMDXComponent=!0},15269:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/architecture-d13aa68ff8739a81d80395b6cb843683.png"},32707:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/dataspace_layer-dad78fc65accdeaaa9afc513a46d344b.png"},86384:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/layer_architecture-b3c9d3ef03a11d3f2646ae35d3eadac8.png"},77048:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/sparql_profiles-50216e34657a45bbc7c361b14850eb7f.png"},38204:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/architecture_small-191e45b2d51cbffe2f60d263c4ac5444.png"},14034:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/dataspace_layer_small-f83d2b4d94c2cbdfe427354f130833a8.png"},47054:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/layer_architecture_small-01c79d41e82911339f6fe18be6552bab.png"},29322:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sparql_profiles_small-2cc46bbd4a6a243cc7dd067a86838ee8.png"}}]);