"use strict";(self.webpackChunkproduct_knowledge_tractusx_github_io=self.webpackChunkproduct_knowledge_tractusx_github_io||[]).push([[9595],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},87456:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:1,title:"AAS Bridge"},o=void 0,s={unversionedId:"development-view/aas/bridge",id:"development-view/aas/bridge",title:"AAS Bridge",description:"This section describes modules and components which are able to bridge",source:"@site/docs/development-view/aas/bridge.md",sourceDirName:"development-view/aas",slug:"/development-view/aas/bridge",permalink:"/product-knowledge/docs/development-view/aas/bridge",draft:!1,editUrl:"https://github.com/catenax-ng/product-knowledge/tree/feature/ART3-382-documentation/docs/development-view/aas/bridge.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"AAS Bridge"},sidebar:"docs",previous:{title:"Layers & Modules",permalink:"/product-knowledge/docs/development-view/modules"},next:{title:"Reference Implementation",permalink:"/product-knowledge/docs/development-view/reference"}},l={},p=[{value:"AAS-KA Bridge",id:"aas-ka-bridge",level:2},{value:"KA-AAS Bridge",id:"ka-aas-bridge",level:2}],d={toc:p};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section describes modules and components which are able to bridge\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3.org/standards/semanticweb/"},"Semantic Web")," technology of\nKnowledge Agents with the ",(0,r.kt)("a",{parentName:"p",href:"https://industrialdigitaltwin.org/"},"Industrial Digital Twin Association's"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://industrialdigitaltwin.org/wp-content/uploads/2023/04/IDTA-01002-3-0_SpecificationAssetAdministrationShell_Part2_API.pdf"},"Asset Administration Shell (AAS)"),"\nstandard."),(0,r.kt)("p",null,"For more information see"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Our ",(0,r.kt)("a",{parentName:"li",href:"../adoption-view/intro"},"Adoption")," guideline"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"../modules"},"Layers & Modules Architecture")),(0,r.kt)("li",{parentName:"ul"},"Our ",(0,r.kt)("a",{parentName:"li",href:"reference"},"Reference Implementation")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"../operation-view/deployment"},"Deployment")," guide")),(0,r.kt)("p",null,"Actually, we are talking about two bridges, one which bridges AAS information that is described in Catena-X aspect schemas\ninto the Catena-X domain ontologies (the AAS-KA Bridge). And one bridge which is able to emulate\nshells and submodels out of a given (federated) virtual graph."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(50435).Z},(0,r.kt)("img",{alt:"AAS Bridge(s)",src:a(54293).Z,width:"400",height:"431"}))),(0,r.kt)("p",null,"As the result, we are able to provide both SPARQL-based Graph Assets as well as AAS-based Submodel Assets based on the same\ndata sources."),(0,r.kt)("p",null,"This integration does not aim to solve the fundamental challenge of conflicting data formats on the meta-model level but\nmaps only a subset of the domain-models between the Knowledge-Graph- and AAS-world. This is true for either direction: The\nnative submodel template/aspect model must be mapped to a subset of the Catena-X-Ontology manually. Likewise, only that part\nof the graph can be exposed via the AAS-APIs that has mapper implementing the transformation."),(0,r.kt)("h2",{id:"aas-ka-bridge"},"AAS-KA Bridge"),(0,r.kt)("p",null,"There are two main components whose interplay implements the AAS-KA bridge:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A flexible SQL/JSON engine, such as Dremio or in parts also Postgresql which is able to mount raw data in various\nformats from remote filesystems and APIs. This engine is used to build flat relational views onto a hierarchical\njson structure that may originate in the value-only-serialization of the AAS. Typically there will be one table/view\nper json-schema/submodel template. As an example, see these ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/catenax-ng/product-knowledge/tree/main/infrastructure/resources/dremio"},"scripts")),(0,r.kt)("li",{parentName:"ul"},"A graph engine (such as ",(0,r.kt)("a",{parentName:"li",href:"https://ontop-vkg.org/guide/"},"ontop")," ) that is able to bind/translate SPARQL queries into SQL. As an example, see these ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/catenax-ng/product-knowledge/tree/main/infrastructure/oem/resources/trace.obda"},"bindings"))),(0,r.kt)("p",null,"Of course, if the data is available in a native SQL-schema, the SQL/JSON-engine can be omitted. Likewise, even the graph engine\ncan be left out if a sparql-capable database holds its data in conformance to the CX-ontologies."),(0,r.kt)("h2",{id:"ka-aas-bridge"},"KA-AAS Bridge"),(0,r.kt)("p",null,"Exposing substructures of the distributed knowledge graph via the AAS APIs is possible by implementing ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/tree/main/dataspace/aas-bridge/src/main/java/io/catenax/knowledge/dataspace/aasbridge/aspects"},"a mapper"),"\nand registering it in the KA-AAS Bridge. For each submodel template, there will be a combination of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'a SPARQL query extracting "flat" information out of the virtual graph'),(0,r.kt)("li",{parentName:"ul"},"a shell/submodel template providing the basic structure of the target AAS"),(0,r.kt)("li",{parentName:"ul"},"a mapper class which populates the query results into the AAS representation")),(0,r.kt)("p",null,"To reduce the complexity of implementing new mappings, a mechanism that works on configuration only will be integrated into\nthe KA-AAS Bridge in the future."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/FraunhoferIOSB/FAAAST-Service/"},"FAAAST framework")," is used as SDK providing the AAS tooling required for the implementation\nof all relevant AAS-APIs."))}u.isMDXComponent=!0},50435:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/aas_bridge-7f90e731d7bd39a49107f604ad649d1b.png"},54293:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/aas_bridge_small-e08503935447eeba1bbb5e60760630d6.png"}}]);