"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[66],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,h=d["".concat(s,".").concat(g)]||d[g]||p[g]||r;return n?o.createElement(h,l(l({ref:t},u),{},{components:n})):o.createElement(h,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4238:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),l=["components"],i={sidebar_position:3,title:"How To (Pilot)"},s=void 0,c={unversionedId:"howto",id:"howto",title:"How To (Pilot)",description:"If you do not want to compile the sources on your own, you may directly start with Deployment",source:"@site/docs/howto.md",sourceDirName:".",slug:"/howto",permalink:"/product-knowledge/docs/howto",editUrl:"https://github.com/catenax-ng/product-knowledge/edit/main/docs/howto.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"How To (Pilot)"},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/product-knowledge/docs/architecture"},next:{title:"Tutorial (Knowledge Agents Spike)",permalink:"/product-knowledge/docs/spike"}},u={},p=[{value:"Building Knowledge Agents",id:"building-knowledge-agents",level:2},{value:"Building under MacOS/M=&gt;1",id:"building-under-macosm1",level:2},{value:"Running Knowledge Agents (Locally)",id:"running-knowledge-agents-locally",level:2},{value:"Running under MacOS/M=&gt;1",id:"running-under-macosm1",level:2},{value:"Using a Helm Chart/Kubernetes Deployment",id:"using-a-helm-chartkubernetes-deployment",level:2},{value:"Login and Welcome",id:"login-and-welcome",level:2}],d={toc:p};function g(e){var t=e.components,i=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you do not want to compile the sources on your own, you may directly start with ",(0,r.kt)("a",{parentName:"p",href:"#deployment-using-docker"},"Deployment")),(0,r.kt)("p",null,"If you are a member of the Catena-X consortium, you could directly start with ",(0,r.kt)("a",{parentName:"p",href:"#interacting-with-the-pilot-apis-and-the-skill-gym"},"Interacting with the Pilot APIs"),"."),(0,r.kt)("h1",{id:"source-repository"},"Source Repository"),(0,r.kt)("p",null,"You will find the source code of the Pilot under ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/tree/v0.5.5-pilot"},"https://github.com/catenax-ng/product-knowledge")," "),(0,r.kt)("p",null,"Be sure to initialise the git submodules after cloning the repo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"git submodule update --init --recursive\n")),(0,r.kt)("h1",{id:"building-packages-and-running-locally"},"Building Packages and Running Locally"),(0,r.kt)("p",null,"You will need a JDK>=11 installed in the JAVA_HOME environment variable.\nYou will need internet access and (optionally) a proxy installed in the HTTP_PROXY_HOST and HTTP_PROXY_PORT environment variables.\nYou will need node.js/npm installed.\nThe build process will install a (local) maven build tool during the run.\nYou will need a valid github user with a reasonably permissive PAT (personal access token)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"export GITHUB_ACTOR=<yourgithubusername>\nexport GITHUB_TOKEN=<yourpat>\n")),(0,r.kt)("p",null,"You will need to configure the skill gym with the right API Key and connector information for the localhost environment "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"cat > ux/skill_gym/.env << EOF\nREACT_APP_SKILL_CONNECTOR_CONTROL=http://localhost:8282\nREACT_APP_SKILL_CONNECTOR_DATA=http://localhost:8284\nREACT_APP_SKILL_CONNECTOR_AUTH_HEADER_KEY=X-Api-Key\nREACT_APP_SKILL_CONNECTOR_AUTH_HEADER_VALUE=bar\nEOF\n")),(0,r.kt)("h2",{id:"building-knowledge-agents"},"Building Knowledge Agents"),(0,r.kt)("p",null,"Building the packages can be done with or without docker images. If you are sitting behind a proxy, you could\nuse the appropriate environment variables HTTP_PROXY_HOST and HTTP_PROXY_PORT."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"./mvnw -s settings.xml install -Pwith-docker-image -Dhttps.proxyHost=${HTTP_PROXY_HOST} -Dhttps.proxyPort=${HTTP_PROXY_PORT} \ncd ux\n./npm install -g jest\n./npm run init:dev\ncd ..\n")),(0,r.kt)("h2",{id:"building-under-macosm1"},"Building under MacOS/M=>1"),(0,r.kt)("p",null,"Since we are not (no more) using gradle, there is no particular MacOS environment kung-fu anymore, as there was in the ",(0,r.kt)("a",{parentName:"p",href:"spike"},"spike"),". Also the default docker images (see above)\ntailored to linux/amd64 run perfectly under arm64-qemu."),(0,r.kt)("p",null,"Only if you want to build without emulation (and do not plan to publish the tags to our registries), you may want to call "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Use the right docker platform when calling mvnw\n./mvnw -s settings.xml install -Dplatform=linux/arm64\n")),(0,r.kt)("h2",{id:"running-knowledge-agents-locally"},"Running Knowledge Agents (Locally)"),(0,r.kt)("p",null,"Running Knowledge Agents locally simply uses the docker-compose infrastructure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd infrastructure\n./docker-compose build\n./docker-compose up &\ncd ux\nnpm run start:skillgym\n")),(0,r.kt)("h2",{id:"running-under-macosm1"},"Running under MacOS/M=>1"),(0,r.kt)("p",null,"Only if you want to run without emulation (and do not plan to publish the tags to our registries), you may prepend"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Use the right docker platform when calling docker-compose\nexport DOCKER_PLATFORM=linux/arm64\n")),(0,r.kt)("h1",{id:"deploying-packages"},"Deploying Packages"),(0,r.kt)("p",null,"Deploying the maven packages can be done with or without docker images"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"./mvnw -s settings.xml publish -Pwith-docker-image\n")),(0,r.kt)("p",null,"Deploying the npm packages can be done as follows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"./npm login --scope=@catenax-ng --registry=https://npm.pkg.github.com\ncd ux\n./npm publish\n")),(0,r.kt)("p",null,"The resulting maven and npm packages reside under ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/orgs/catenax-ng/packages?repo_name=product-knowledge"},"this repository"),"."),(0,r.kt)("p",null,"The resulting docker images reside under ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/orgs/catenax-ng/packages?ecosystem=container&tab=packages&ecosystem=container&q=product-knowledge"},"this repository"),"."),(0,r.kt)("p",null,"The following images are built (and also publically available for direct pull under linux/amd64):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"docker pull ghcr.io/catenax-ng/product-knowledge/backend/sql-virtualize-dremio-oss:22.0\ndocker pull ghcr.io/catenax-ng/product-knowledge/backend/lifetime-prognosis-mock:latest\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/remoting-agent:0.5.5-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/provisioning-agent:0.5.5-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/agentplane-azure-vault:0.5.5-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/edc-dataplane-azure-vault:0.1.1-ka-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/edc-controlplane-postgresql:0.1.1-ka-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/edc-controlplane-memory:0.1.1-ka-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/edc-controlplane-postgresql-hashicorp-vault:0.1.1-ka-snapshot\ndocker pull ghcr.io/catenax-ng/product-knowledge/dataspace/edc-dataplane-hashicorp-vault:0.1.1-ka-snapshot\n")),(0,r.kt)("h2",{id:"using-a-helm-chartkubernetes-deployment"},"Using a Helm Chart/Kubernetes Deployment"),(0,r.kt)("p",null,"You could mount the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/tree/v0.5.5-pilot/infrastructure"},"infrastructure folder of the repository"),"  also in Argo CD or\nan equivalent mechanism. "),(0,r.kt)("p",null,"Please be aware that this is currently not configurable, e.g. to non-Catena-X environments. A rudimentary configuration of the business partners/roles (Consumer, OEM and Supplier) is available."),(0,r.kt)("h1",{id:"interacting-with-the-pilot-apis-and-the-skill-gym"},"Interacting with the Pilot APIs and the Skill Gym"),(0,r.kt)("p",null,"You should now be able to access the APIs via this public Postman Workspace ",(0,r.kt)("a",{parentName:"p",href:"https://www.postman.com/catena-x/workspace/catena-x-knowledge-agents"},"https://www.postman.com/catena-x/workspace/catena-x-knowledge-agents"),' (choose the "Localhost" environment - no additional credentials needed - and the "Knowledge Agents Pilot" Collection).'),(0,r.kt)("p",null,"As an alternative, you may import the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-knowledge/blob/v0.5.5-pilot/cx_ka_pilot.postman_collection.json"},"Postman Collection")," into the REST IDE of your choice."),(0,r.kt)("p",null,'If you are a member of the Catena-X consortium, you may also directly switch to the "Integration" environment and populate the lacking secrets with information from ',(0,r.kt)("a",{parentName:"p",href:"https://confluence.catena-x.net/x/1wHrAg"},"our Catena-x confluence page"),". You will then access the already deployed system."),(0,r.kt)("p",null,"You should then be able to access the skill gym via http://localhost:3000 for which you need an account in the Catena-X Central IDP."),(0,r.kt)("p",null,"If you are a member of the Catena-X consortium, you may also directly login to the ",(0,r.kt)("a",{parentName:"p",href:"https://knowledge.int.demo.catena-x.net/skill_gym"},"Integration Environment")," information from ",(0,r.kt)("a",{parentName:"p",href:"https://confluence.catena-x.net/x/1wHrAg"},"our Catena-x confluence page"),". "),(0,r.kt)("h1",{id:"what-the-demo-shows"},"What the demo shows"),(0,r.kt)("h2",{id:"login-and-welcome"},"Login and Welcome"),(0,r.kt)("p",null,"After a successful login (for which you will need a login to the Catena-X Central IDP) you will enter the dashboard which shows your assets and the Catena-X ontology"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Pilot Login",src:n(3171).Z,width:"1919",height:"1175"})),(0,r.kt)("p",null,"Here you will see whether your connector has any graph or skill offers."),(0,r.kt)("p",null,"You will also see a graph of the concepts (classes, inheritance, attributes and relations) that are encoded in the graph assets and are inferenced about in the\nskill assets."))}g.isMDXComponent=!0},3171:function(e,t,n){t.Z=n.p+"assets/images/pilot_skill_gym-e644cfb20552231ef540bad0f5ad6de2.png"}}]);