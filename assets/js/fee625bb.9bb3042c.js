"use strict";(self.webpackChunkproduct_knowledge_tractusx_github_io=self.webpackChunkproduct_knowledge_tractusx_github_io||[]).push([[3804],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=o,g=s["".concat(p,".").concat(m)]||s[m]||u[m]||r;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},38361:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const r={sidebar_position:5,title:"Compiling"},i=void 0,l={unversionedId:"development-view/compile",id:"development-view/compile",title:"Compiling",description:"We publish precompiled development artifacts via the Github Package Registry.",source:"@site/docs/development-view/compile.md",sourceDirName:"development-view",slug:"/development-view/compile",permalink:"/product-knowledge/docs/development-view/compile",draft:!1,editUrl:"https://github.com/catenax-ng/product-knowledge/tree/feature/ART3-382-documentation/docs/development-view/compile.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Compiling"},sidebar:"docs",previous:{title:"Building",permalink:"/product-knowledge/docs/development-view/build"},next:{title:"API",permalink:"/product-knowledge/docs/development-view/api"}},p={},c=[{value:"Compiling Against JRE Artifacts",id:"compiling-against-jre-artifacts",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Include Agent into your EDC build",id:"include-agent-into-your-edc-build",level:3},{value:"Control Plane Build",id:"control-plane-build",level:4},{value:"Data Plane Dependency",id:"data-plane-dependency",level:4},{value:"Compiling Against Node Artifacts",id:"compiling-against-node-artifacts",level:2}],d={toc:c};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We publish precompiled development artifacts via the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/orgs/catenax-ng/packages?repo_name=product-knowledge"},"Github Package Registry"),".\nAll development artifacts are versioned using a semantic versioning scheme RELEASE.INCREMENT.ITERATION(-BUILDTYPE)\nThe release versions are documents in the ",(0,o.kt)("a",{parentName:"p",href:"../Changelog"},"Changelog"),"."),(0,o.kt)("h2",{id:"compiling-against-jre-artifacts"},"Compiling Against JRE Artifacts"),(0,o.kt)("p",null,"All JRE based artifcats can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://maven.pkg.github.com/catenax-ng/product-knowledge"},"Github Maven Repository")," and rely on Java 11."),(0,o.kt)("h3",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"Besides further OSS dependencies, Agent KIT is compatible with particular Catena-X Releases (and its EDC/Connector KIT)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Version 0.6.4-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.1.2"),(0,o.kt)("li",{parentName:"ul"},"Version 0.7.2-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.1.4 (unpublished)"),(0,o.kt)("li",{parentName:"ul"},"Version 0.7.>=3-SNAPSHOT of Knowledge Agents is compatible with Catena-X EDC Release 0.2.0"),(0,o.kt)("li",{parentName:"ul"},"Version 0.8.>=5-SNAPSHOT of Knowledge Agents will be compatible with Catena-X EDC Release >=0.3.0")),(0,o.kt)("h3",{id:"include-agent-into-your-edc-build"},"Include Agent into your EDC build"),(0,o.kt)("p",null,"Add the following to the repositories section of your master pom (and remember to put your github access token to the settings.xml):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"  <repository>\n    <id>github-ka</id>\n    <name>Catena-X Knowledge Agents Maven Repository</name>\n    <url>https://maven.pkg.github.com/catenax-ng/product-knowledge</url>\n   </repository>\n")),(0,o.kt)("h4",{id:"control-plane-build"},"Control Plane Build"),(0,o.kt)("p",null,"Add the following dependency to your final control plane pom:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"}," <dependency>\n    <groupId>io.catenax.knowledge.dataspace.edc.control-plane</groupId>\n    <artifactId>control-plane-transfer</artifactId>\n    <version>0.7.4-SNAPSHOT</version>\n </dependency>\n")),(0,o.kt)("h4",{id:"data-plane-dependency"},"Data Plane Dependency"),(0,o.kt)("p",null,"Add the following dependency to your final data plane pom:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"  <dependency>\n    <groupId>io.catenax.knowledge.dataspace.edc.control-plane</groupId>\n    <artifactId>agent-plane-protocol</artifactId>\n    <version>0.7.4-SNAPSHOT</version>\n  </dependency>\n")),(0,o.kt)("h2",{id:"compiling-against-node-artifacts"},"Compiling Against Node Artifacts"),(0,o.kt)("p",null,"All Javascript-based artifcats can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://npm.pkg.github.com"},"Github NPM Repository")))}s.isMDXComponent=!0}}]);